% ICFP 2009 Programming Contest Diary
% Justin Bailey
% June 25, 2009
<div id="wrapper">
<div id="masthead" class="fix" style="width: 100%">
<h1 class="sans"><a href="http://blog.codeslower.com" class="title">codeslower.com</a> <em>Savor Your Code.</em></h1>
</div>
<div id="mid" class="fix">
<div id="mainCol" class="fix">
<div id="article" class="post">

<div style="text-align: center">
## The ICFP 2009 Programming Contest &#8212; A diary.
**Justin Bailey** \<<tt>jgbailey@codeslower.com</tt>\>
</div>

<div id="blogbody" class="entry">

### June 25, 2009 -- 9:00 AM

This site will serve as a diary and reference for my work on the
upcoming [ICFP 2009 programming contest](http://www.icfpcontest.org). All code committed will be
available on
[GitHub](http://github.com/m4dc4p/func-n-stein/tree/master) and can be
cloned from <tt>git://github.com/m4dc4p/func-n-stein.git</tt>.

### June 25, 2009 -- 11:43 AM

All times PDT, by the way. 

Downloaded the spec, read through it, seems a lot like last years problem. I have to implement a 
virtual machine and then solve a bunch of orbit problems? Sounds doubly tough. For starters I think 
I will implement something to write the *submission* format, and submit an empty solution. We'll see
what happens.

### June 25, 2009 -- 2:03 PM

Got code to write a solution and have submitted an empty solution. Not sure if double representation
will be written correctly - does Haskell write it in "IEEE 764" notation automatically? Had to do some
pointer conversions to write doubles as binary data:

              v <- allocaBytes 8 $ \p -> do 
                       poke p val 
                       mapM (\i -> peekElemOff (castPtr p) i) [0, 1]

''val'' is our double value. I write to 8 byte memory location, then read out as two 32-bit values:

              -- write to file
              hPutWord (int2Word addr)
              hPutWord (v !! 0)
              hPutWord (v !! 1)

''hPutWord'' fixes the type, as it takes a Word32 and writes it to a file:

     hPutWord :: Word32 -> IO ()
     hPutWord w = with w $ \p -> do
          hPutBuf h p (sizeOf w)


I do se a bug above, where I am not writing the value in little-endian order. Better fix that!

### June 25, 2009 -- 2:52 PM

Fairly confident output file format is being written correctly. At least the competition server doesn't
complain When I submit solutions that write to the correct config port. Also cabalized early so it won't be
too painful later -- I expect dependencies to grow.

</div>
</div>
</div>
</div>
</div>
